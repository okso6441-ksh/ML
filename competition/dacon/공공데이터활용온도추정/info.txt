1. 평가

import numpy as np

def mse_AIFrenz(y_true, y_pred):
    '''
    y_true: 실제 값
    y_pred: 예측 값
    '''
    diff = abs(y_true - y_pred)
    
    less_then_one = np.where(diff < 1, 0, diff)
    
    # multi-column일 경우에도 계산 할 수 있도록 np.average를 한번 더 씌움
    score = np.average(np.average(less_then_one ** 2, axis = 0))
    
    return score


평가 지표는 실제값과 1 미만의 차이에 대해서는 패널티를 주지 않는 MSE입니다. 센서의 측정오차로 인해, 1 미만의 차이로 예측을 한 값에 대해서는 패널티를 부여하지 않습니다. 





데이터 설명

-     대전지역에서 측정한 실내외 19곳의 센서데이터와, 주변 지역의 기상청 공공데이터를 semi-비식별화하여 제공합니다. 

-     센서는 온도를 측정하였습니다. 

-     모든 데이터는 시간 순으로 정렬 되어 있으며 10분 단위 데이터 입니다. 

-     예측 대상(target variable)은 Y18입니다. 



train.csv 

-     30일 간의 기상청 데이터 (X00~X39) 및 센서데이터 (Y00~Y17)

-     이후 3일 간의 기상청 데이터 (X00~X39) 및 센서데이터 (Y18)



test.csv 

-     train.csv 기간 이후 80일 간의 기상청 데이터 (X00~X39)

5개 지역 x 8개 기상 속성 정보 = 40개 피처 
id 고유 번호 (시간 순서) 10분 
X00, X07, X28, X31, X32 기온
X01, X06, X22, X27, X29 현지기압
X02, X03, X18, X24, X26 풍속
X04, X10, X21, X36, X39 일일 누적강수량
X05, X08, X09, X23, X33 해면기압
X11, X14, X16, X19, X34 일일 누적일사량
X12, X20, X30, X37, X38 습도
X13, X15, X17, X25, X35 풍향
Y00~Y17 센서 측정 온도
Y18 센서 측정 온도


